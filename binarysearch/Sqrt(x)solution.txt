/*binary search
If x < 2, return x.

Set the left boundary to 2, and the right boundary to x / 2.

While left <= right:

Take num = (left + right) / 2 as a guess.
Compute num * num and compare it with x:

If num * num > x, move the right boundary right = pivot -1

Else, if num * num < x, move the left boundary left = pivot + 1

Otherwise num * num == x,
the integer square root is here, let's return it

Return right
*/
class Solution {
    public int mySqrt(int x) {
        if(x == 0 || x == 1){
            return x;
        }  
        int left = 2;
        int right = x/2;
        
        while(left <= right){
            int mid = left + (right - left)/2;
            if((long)mid * mid > x){
                right = mid - 1;
            }else if(mid*mid < x){
                left = mid +1;
            }else{
                return mid;
            }
        }
        return right;
    }
}